
name: CI

on:
  push:
    paths-ignore:
      - '**.md'
  pull_request:
    paths-ignore:
      - '**.md'

env:
  CARGO_TERM_COLOR: always

jobs:
  check:
    runs-on: ${{ matrix.os }}
    env:
      RUST_BACKTRACE: 1
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-apple-darwin
    steps:
    - uses: actions/checkout@v2
    - name: cargo fetch
      run: cargo fetch --target ${{ matrix.target }}
    - name: Build
      run: cargo build --all-features --all-targets
      continue-on-error: true
    - name: Build Examples
      run: cargo build -p neural-network-mnist-example
      continue-on-error: true
    - name: Build Benches
      run: cargo build -p neural-network-benches --benches
      continue-on-error: true
    - name: Test 
      run: cargo test --no-default-features
  krnlc: 
    runs-on: ubuntu-latest
    # spirv tools install copied from https://github.com/EmbarkStudios/rust-gpu/blob/main/.github/workflows/ci.yaml
    env:
      spirv_tools_version: "20221024"
      spirv_tools_linux_url: "https://storage.googleapis.com/spirv-tools/artifacts/prod/graphics_shader_compiler/spirv-tools/linux-clang-release/continuous/1863/20221024-094528/install.tgz"
    steps: 
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2023-05-27
          components: rust-src, rustc-dev, llvm-tools-preview
      - name: Install spirv-tools
        run: |
          sudo apt install libwayland-cursor0 libxkbcommon-dev libwayland-dev
          mkdir "${HOME}/spirv-tools"
          curl -fL "$spirv_tools_linux_url" | tar -xz -C "${HOME}/spirv-tools"
          echo "${HOME}/spirv-tools/install/bin" >> $GITHUB_PATH
      - name: Install krnlc
        run: cargo +nightly-2023-05-27 install krnlc --version=0.0.4 --locked -v --no-default-features --features use-installed-tools
      - name: krnlc
        run: krnlc -p autograph -v --check
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install rustup components
        run: rustup component add rustfmt clippy
      - name: Rustfmt
        run: cargo fmt --all -- --check
        continue-on-error: true
      - name: Clippy
        run: cargo clippy --no-default-features --features "neural-network" -- -D warnings
        continue-on-error: true
      - name: Docs
        run: cargo doc --all-features
        env:
          RUSTDOCFLAGS: -Dwarnings 
