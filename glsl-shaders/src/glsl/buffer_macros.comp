
#ifdef U8
    #define BUFFER_LOAD_U8(x, i) ((x[(i)/4] >> (8 * ((i)% 4))) & 0xF)
#endif

#ifdef U16
    #define BUFFER_LOAD_U16(x, i) ((x[(i)/2] >> (16 * ((i)% 2))) & 0xFF)
#endif

#if defined BF16 || defined T2_BF16
    #define BUFFER_LOAD_BF16(x, i) ((((i) & 1) == 0)\
        ? uintBitsToFloat(x[(i)/2] << 16)\
        : uintBitsToFloat(x[(i)/2] & 0xFFFF0000))
    #define BUFFER_STORE_BF16(y, i, x) ((((i) & 1) == 0)\
        ? y[(i)/2] |= (floatBitsToUint(x) >> 16)\
        : y[(i)/2] |= (floatBitsToUint(x) & 0xFFFF0000))
    #define BUFFER_ATOMIC_STORE_BF16(y, i, x) ((((i) & 1) == 0)\
        ? atomicOr(y[(i)/2], (floatBitsToUint(x) >> 16))\
        : atomicOr(y[(i)/2], (floatBitsToUint(x) & 0xFFFF0000)))
#endif

#ifdef T
    #define T_BUFFER T
    #define BUFFER_LOAD(x, i) x[i]
    #define BUFFER_STORE(y, i, x) y[i] = x
#else
    #ifdef U8
        #define T uint
        #define T_BUFFER uint
        #define BUFFER_LOAD(x, i) BUFFER_LOAD_U8(x, i)
    #elif defined U16
        #define T uint
        #define T_BUFFER uint
        #define BUFFER_LOAD(x, i) BUFFER_LOAD_U16(x, i)
    #elif defined BF16
        #define T float
        #define T_BUFFER uint
        #define BUFFER_LOAD(x, i) BUFFER_LOAD_BF16(x, i)
        #define BUFFER_STORE(y, i, x) BUFFER_STORE_BF16(y, i, x)
        #define BUFFER_ATOMIC_STORE(y, i, x) BUFFER_ATOMIC_STORE_BF16(y, i, x)
    #endif
#endif

#ifdef T2
    #define T2_BUFFER T2
    #define BUFFER_2_LOAD(x, i) x[i]
    #define BUFFER_2_STORE(y, i, x) y[i] = x
#else
    #ifdef T2_BF16
        #define T2 float
        #define T2_BUFFER uint
        #define BUFFER_2_LOAD(x, i) BUFFER_LOAD_BF16(x, i)
        #define BUFFER_2_STORE(y, i, x) BUFFER_STORE_BF16(y, i, x)
        #define BUFFER_2_ATOMIC_STORE(y, i, x) BUFFER_ATOMIC_STORE_BF16(y, i, x)
    #endif
#endif
