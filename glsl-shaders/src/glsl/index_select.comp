#version 450

#include "buffer_macros.comp"

layout(local_size_x=64) in;

readonly buffer X1 {
    T_BUFFER x1[];
};

readonly buffer X2 {
    uint x2[];
};

restrict buffer Y {
    T_BUFFER y[];
};

layout(push_constant) uniform PushConsts {
    uint batch_size;
    uint n;
};

void main() {
    uint global_x = gl_GlobalInvocationID.x;
    uint index;
    T value = 0;
    if (global_x < batch_size) {
        index = x2[global_x];
        if (index < n) {
            value = BUFFER_LOAD(x1, global_x * n + index);
        }
        #ifdef BF16
            BUFFER_ATOMIC_STORE(y, global_x, value);
        #else
            BUFFER_STORE(y, global_x, value);
        #endif
    }
}
