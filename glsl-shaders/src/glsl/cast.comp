#version 450

#include "buffer_macros.comp"

layout(local_size_x=64) in;

#ifndef INPLACE
readonly buffer X {
    T_BUFFER x[];
};
#endif

restrict buffer Y {
    T2_BUFFER y[];
};

layout(push_constant) uniform PushConsts {
    uint n;
    T2 alpha;
};

void main() {
    uint global_x = gl_GlobalInvocationID.x;
    T2 tmp;
    if (global_x < n) {
        #ifndef INPLACE
            tmp = T2(BUFFER_LOAD(x, global_x)) * alpha;
        #else
            tmp = BUFFER_2_LOAD(y, global_x) * alpha;
        #endif
        BUFFER_2_STORE(y, global_x, tmp);
    }
}
