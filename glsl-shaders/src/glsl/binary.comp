#version 450

#include "buffer_macros.comp"

layout(local_size_x=64) in;

#ifdef ASSIGN
    restrict buffer Y {
        T_BUFFER y[];
    };

    readonly buffer X {
        T_BUFFER x[];
    };
#else
    readonly buffer X1 {
        T_BUFFER x1[];
    };

    readonly buffer X2 {
        T_BUFFER x2[];
    };

    restrict buffer Y {
        T_BUFFER y[];
    };
#endif

layout(push_constant) uniform PushConsts {
    uint n;
    T alpha;
};

void main() {
    uint global_x = gl_GlobalInvocationID.x;
    T tmp;
    if (global_x < n) {
        #ifdef ASSIGN
            tmp = BUFFER_LOAD(y, global_x) OP alpha * BUFFER_LOAD(x, global_x);
        #else
            tmp = BUFFER_LOAD(x1, global_x) OP BUFFER_LOAD(x2, global_x);
        #endif
        BUFFER_STORE(y, global_x, tmp);
    }
}
