#version 450

#include "buffer_macros.comp"

layout(local_size_x=64) in;

readonly buffer X {
    T_BUFFER[] x;
};

buffer DX {
    T_BUFFER[] dx;
};

readonly buffer Target {
    T_BUFFER[] t;
};

readonly buffer DY {
    T_BUFFER[] dy;
};

layout(push_constant) uniform PushConsts {
    uint n;
};

void main() {
    uint tid = gl_GlobalInvocationID.x;
    T acc;
    if (tid < n) {
        acc = BUFFER_LOAD(dx, tid);
        T x = BUFFER_LOAD(x, tid);
        T x_hat = 1 / (1 + exp(-x));
        T dy = BUFFER_LOAD(dy, 0);
        acc += (1 / n) * dy * (x_hat - BUFFER_LOAD(t, tid));

        BUFFER_STORE(dx, tid, acc);
    }
}
